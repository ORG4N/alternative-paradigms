# Generated from grammar/Lisp.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,112,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,3,2,38,8,2,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,71,8,3,1,4,1,4,
        1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,
        1,10,1,10,1,11,4,11,94,8,11,11,11,12,11,95,1,12,3,12,99,8,12,1,12,
        4,12,102,8,12,11,12,12,12,103,1,13,4,13,107,8,13,11,13,12,13,108,
        1,13,1,13,0,0,14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,1,0,4,2,0,65,90,97,122,2,0,43,43,45,45,1,0,
        48,57,3,0,9,10,13,13,32,32,125,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,1,29,1,0,0,0,3,31,1,0,0,0,5,37,1,0,0,0,7,70,1,0,0,0,
        9,72,1,0,0,0,11,75,1,0,0,0,13,80,1,0,0,0,15,84,1,0,0,0,17,86,1,0,
        0,0,19,88,1,0,0,0,21,90,1,0,0,0,23,93,1,0,0,0,25,98,1,0,0,0,27,106,
        1,0,0,0,29,30,5,40,0,0,30,2,1,0,0,0,31,32,5,41,0,0,32,4,1,0,0,0,
        33,38,3,15,7,0,34,38,3,17,8,0,35,38,3,19,9,0,36,38,3,21,10,0,37,
        33,1,0,0,0,37,34,1,0,0,0,37,35,1,0,0,0,37,36,1,0,0,0,38,6,1,0,0,
        0,39,40,5,115,0,0,40,41,5,105,0,0,41,71,5,110,0,0,42,43,5,99,0,0,
        43,44,5,111,0,0,44,71,5,115,0,0,45,46,5,115,0,0,46,47,5,113,0,0,
        47,48,5,117,0,0,48,49,5,97,0,0,49,50,5,114,0,0,50,71,5,101,0,0,51,
        52,5,115,0,0,52,53,5,113,0,0,53,54,5,114,0,0,54,71,5,116,0,0,55,
        56,5,99,0,0,56,57,5,97,0,0,57,71,5,114,0,0,58,59,5,99,0,0,59,60,
        5,100,0,0,60,71,5,114,0,0,61,62,5,113,0,0,62,63,5,117,0,0,63,64,
        5,111,0,0,64,65,5,116,0,0,65,71,5,101,0,0,66,67,5,97,0,0,67,68,5,
        116,0,0,68,69,5,111,0,0,69,71,5,109,0,0,70,39,1,0,0,0,70,42,1,0,
        0,0,70,45,1,0,0,0,70,51,1,0,0,0,70,55,1,0,0,0,70,58,1,0,0,0,70,61,
        1,0,0,0,70,66,1,0,0,0,71,8,1,0,0,0,72,73,5,101,0,0,73,74,5,113,0,
        0,74,10,1,0,0,0,75,76,5,99,0,0,76,77,5,111,0,0,77,78,5,110,0,0,78,
        79,5,100,0,0,79,12,1,0,0,0,80,81,5,108,0,0,81,82,5,101,0,0,82,83,
        5,116,0,0,83,14,1,0,0,0,84,85,5,43,0,0,85,16,1,0,0,0,86,87,5,45,
        0,0,87,18,1,0,0,0,88,89,5,42,0,0,89,20,1,0,0,0,90,91,5,47,0,0,91,
        22,1,0,0,0,92,94,7,0,0,0,93,92,1,0,0,0,94,95,1,0,0,0,95,93,1,0,0,
        0,95,96,1,0,0,0,96,24,1,0,0,0,97,99,7,1,0,0,98,97,1,0,0,0,98,99,
        1,0,0,0,99,101,1,0,0,0,100,102,7,2,0,0,101,100,1,0,0,0,102,103,1,
        0,0,0,103,101,1,0,0,0,103,104,1,0,0,0,104,26,1,0,0,0,105,107,7,3,
        0,0,106,105,1,0,0,0,107,108,1,0,0,0,108,106,1,0,0,0,108,109,1,0,
        0,0,109,110,1,0,0,0,110,111,6,13,0,0,111,28,1,0,0,0,7,0,37,70,95,
        98,103,108,1,6,0,0
    ]

class LispLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    OP = 3
    FUNC = 4
    EQ_FUNC = 5
    COND_FUNC = 6
    LET = 7
    ADD = 8
    SUB = 9
    MUL = 10
    DIV = 11
    ID = 12
    INT = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'eq'", "'cond'", "'let'", "'+'", "'-'", "'*'", 
            "'/'" ]

    symbolicNames = [ "<INVALID>",
            "OP", "FUNC", "EQ_FUNC", "COND_FUNC", "LET", "ADD", "SUB", "MUL", 
            "DIV", "ID", "INT", "WS" ]

    ruleNames = [ "T__0", "T__1", "OP", "FUNC", "EQ_FUNC", "COND_FUNC", 
                  "LET", "ADD", "SUB", "MUL", "DIV", "ID", "INT", "WS" ]

    grammarFileName = "Lisp.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


