# Generated from grammar/Lisp.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,85,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,1,1,
        1,1,2,1,2,1,2,1,2,3,2,34,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,52,8,3,1,4,1,4,1,4,1,4,1,5,1,5,1,
        6,1,6,1,7,1,7,1,8,1,8,1,9,4,9,67,8,9,11,9,12,9,68,1,10,3,10,72,8,
        10,1,10,4,10,75,8,10,11,10,12,10,76,1,11,4,11,80,8,11,11,11,12,11,
        81,1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,1,0,4,2,0,65,90,97,122,2,0,43,43,45,45,1,0,48,57,3,0,
        9,10,13,13,32,32,94,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,27,1,0,
        0,0,5,33,1,0,0,0,7,51,1,0,0,0,9,53,1,0,0,0,11,57,1,0,0,0,13,59,1,
        0,0,0,15,61,1,0,0,0,17,63,1,0,0,0,19,66,1,0,0,0,21,71,1,0,0,0,23,
        79,1,0,0,0,25,26,5,40,0,0,26,2,1,0,0,0,27,28,5,41,0,0,28,4,1,0,0,
        0,29,34,3,11,5,0,30,34,3,13,6,0,31,34,3,15,7,0,32,34,3,17,8,0,33,
        29,1,0,0,0,33,30,1,0,0,0,33,31,1,0,0,0,33,32,1,0,0,0,34,6,1,0,0,
        0,35,36,5,115,0,0,36,37,5,105,0,0,37,52,5,110,0,0,38,39,5,99,0,0,
        39,40,5,111,0,0,40,52,5,115,0,0,41,42,5,115,0,0,42,43,5,113,0,0,
        43,44,5,117,0,0,44,45,5,97,0,0,45,46,5,114,0,0,46,52,5,101,0,0,47,
        48,5,115,0,0,48,49,5,113,0,0,49,50,5,114,0,0,50,52,5,116,0,0,51,
        35,1,0,0,0,51,38,1,0,0,0,51,41,1,0,0,0,51,47,1,0,0,0,52,8,1,0,0,
        0,53,54,5,108,0,0,54,55,5,101,0,0,55,56,5,116,0,0,56,10,1,0,0,0,
        57,58,5,43,0,0,58,12,1,0,0,0,59,60,5,45,0,0,60,14,1,0,0,0,61,62,
        5,42,0,0,62,16,1,0,0,0,63,64,5,47,0,0,64,18,1,0,0,0,65,67,7,0,0,
        0,66,65,1,0,0,0,67,68,1,0,0,0,68,66,1,0,0,0,68,69,1,0,0,0,69,20,
        1,0,0,0,70,72,7,1,0,0,71,70,1,0,0,0,71,72,1,0,0,0,72,74,1,0,0,0,
        73,75,7,2,0,0,74,73,1,0,0,0,75,76,1,0,0,0,76,74,1,0,0,0,76,77,1,
        0,0,0,77,22,1,0,0,0,78,80,7,3,0,0,79,78,1,0,0,0,80,81,1,0,0,0,81,
        79,1,0,0,0,81,82,1,0,0,0,82,83,1,0,0,0,83,84,6,11,0,0,84,24,1,0,
        0,0,7,0,33,51,68,71,76,81,1,6,0,0
    ]

class LispLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    OP = 3
    FUNC = 4
    LET = 5
    ADD = 6
    SUB = 7
    MUL = 8
    DIV = 9
    ID = 10
    INT = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'let'", "'+'", "'-'", "'*'", "'/'" ]

    symbolicNames = [ "<INVALID>",
            "OP", "FUNC", "LET", "ADD", "SUB", "MUL", "DIV", "ID", "INT", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "OP", "FUNC", "LET", "ADD", "SUB", "MUL", 
                  "DIV", "ID", "INT", "WS" ]

    grammarFileName = "Lisp.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


